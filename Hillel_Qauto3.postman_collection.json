{
	"info": {
		"_postman_id": "dfc9acee-e996-431c-9695-ec52eac9fe5e",
		"name": "Hillel_Qauto",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21930313"
	},
	"item": [
		{
			"name": "Fields validation",
			"item": [
				{
					"name": "signup empty email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomFirstName}}\"));",
									"pm.collectionVariables.set(\"lastName\", pm.variables.replaceIn(\"{{$randomLastName}}\"));",
									"pm.collectionVariables.set(\"email\", pm.variables.replaceIn(\"{{$randomEmail}}\"));",
									"pm.collectionVariables.set(\"password\", pm.variables.replaceIn(\"{{$randomPassword}}\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check responce message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"\\\"email\\\" is not allowed to be empty\");",
									"});",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\":{",
									"        \"status\": {\"type\":\"string\"},",
									"        \"message\":{\"type\":\"string\"}",
									"    },",
									"    \"required\": [\"status\",\"message\"]",
									"};",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test('JSON schema is valid', function () {",
									"    pm.expect(tv4.validate(response, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{name}}\",\n  \"lastName\": \"{{lastName}}\",\n  \"email\": \" \",\n  \"password\": \"{{password}}\",\n  \"repeatPassword\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/signup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"signup"
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\n  'https://qauto2.forstudy.space/api/auth/signup' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"name\": \"Johnson\",\n  \"lastName\": \"Doutestinvst\",\n  \"email\": \"testdouinv@test.com\",\n  \"password\": \"Qwertyt23456\",\n  \"repeatPassword\": \"Qwertyt23456\"\n}'"
					},
					"response": []
				},
				{
					"name": "signup email is null",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomFirstName}}\"));",
									"pm.collectionVariables.set(\"lastName\", pm.variables.replaceIn(\"{{$randomLastName}}\"));",
									"pm.collectionVariables.set(\"email\", pm.variables.replaceIn(\"{{$randomEmail}}\"));",
									"pm.collectionVariables.set(\"password\", pm.variables.replaceIn(\"{{$randomPassword}}\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Check responce status\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"error\");",
									"});",
									"",
									"pm.test(\"Check responce message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"Email is incorrect\");",
									"});",
									"",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\":{",
									"        \"status\": {\"type\":\"string\"},",
									"        \"message\":{\"type\":\"string\"}",
									"    },",
									"    \"required\": [\"status\",\"message\"]",
									"};",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test('JSON schema is valid', function () {",
									"    pm.expect(tv4.validate(response, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{name}}\",\n  \"lastName\": \"{{lastName}}\",\n  \"email\": null,\n  \"password\": \"{{password}}\",\n  \"repeatPassword\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/signup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"signup"
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\n  'https://qauto2.forstudy.space/api/auth/signup' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"name\": \"Johnson\",\n  \"lastName\": \"Doutestinvst\",\n  \"email\": \"testdouinv@test.com\",\n  \"password\": \"Qwertyt23456\",\n  \"repeatPassword\": \"Qwertyt23456\"\n}'"
					},
					"response": []
				},
				{
					"name": "signup email is numbers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomFirstName}}\"));",
									"pm.collectionVariables.set(\"lastName\", pm.variables.replaceIn(\"{{$randomLastName}}\"));",
									"pm.collectionVariables.set(\"email\", pm.variables.replaceIn(\"{{$randomEmail}}\"));",
									"pm.collectionVariables.set(\"password\", pm.variables.replaceIn(\"{{$randomPassword}}\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Check responce message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"Email is incorrect\");",
									"});",
									"",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\":{",
									"        \"status\": {\"type\":\"string\"},",
									"        \"message\":{\"type\":\"string\"}",
									"    },",
									"    \"required\": [\"status\",\"message\"]",
									"};",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test('JSON schema is valid', function () {",
									"    pm.expect(tv4.validate(response, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{name}}\",\n  \"lastName\": \"{{lastName}}\",\n  \"email\": 123,\n  \"password\": \"{{password}}\",\n  \"repeatPassword\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/signup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"signup"
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\n  'https://qauto2.forstudy.space/api/auth/signup' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"name\": \"Johnson\",\n  \"lastName\": \"Doutestinvst\",\n  \"email\": \"testdouinv@test.com\",\n  \"password\": \"Qwertyt23456\",\n  \"repeatPassword\": \"Qwertyt23456\"\n}'"
					},
					"response": []
				},
				{
					"name": "signup email without @",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomFirstName}}\"));",
									"pm.collectionVariables.set(\"lastName\", pm.variables.replaceIn(\"{{$randomLastName}}\"));",
									"pm.collectionVariables.set(\"email\", pm.variables.replaceIn(\"{{$randomEmail}}\"));",
									"pm.collectionVariables.set(\"password\", pm.variables.replaceIn(\"{{$randomPassword}}\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Check responce message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"Email is incorrect\");",
									"});",
									"",
									"pm.test(\"Check responce status\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"error\");",
									"});",
									"",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\":{",
									"        \"status\": {\"type\":\"string\"},",
									"        \"message\":{\"type\":\"string\"}",
									"    },",
									"    \"required\": [\"status\",\"message\"]",
									"};",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test('JSON schema is valid', function () {",
									"    pm.expect(tv4.validate(response, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{name}}\",\n  \"lastName\": \"{{lastName}}\",\n  \"email\": \"test#com\",\n  \"password\": \"{{password}}\",\n  \"repeatPassword\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/signup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"signup"
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\n  'https://qauto2.forstudy.space/api/auth/signup' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"name\": \"Johnson\",\n  \"lastName\": \"Doutestinvst\",\n  \"email\": \"testdouinv@test.com\",\n  \"password\": \"Qwertyt23456\",\n  \"repeatPassword\": \"Qwertyt23456\"\n}'"
					},
					"response": []
				},
				{
					"name": "signup email without domain name",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomFirstName}}\"));",
									"pm.collectionVariables.set(\"lastName\", pm.variables.replaceIn(\"{{$randomLastName}}\"));",
									"pm.collectionVariables.set(\"email\", pm.variables.replaceIn(\"{{$randomEmail}}\"));",
									"pm.collectionVariables.set(\"password\", pm.variables.replaceIn(\"{{$randomPassword}}\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Check responce message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"Email is incorrect\");",
									"});",
									"",
									"pm.test(\"Check responce status\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"error\");",
									"});",
									"",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\":{",
									"        \"status\": {\"type\":\"string\"},",
									"        \"message\":{\"type\":\"string\"}",
									"    },",
									"    \"required\": [\"status\",\"message\"]",
									"};",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test('JSON schema is valid', function () {",
									"    pm.expect(tv4.validate(response, schema)).to.be.true;",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{name}}\",\n  \"lastName\": \"{{lastName}}\",\n  \"email\": \"test@\",\n  \"password\": \"{{password}}\",\n  \"repeatPassword\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/signup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"signup"
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\n  'https://qauto2.forstudy.space/api/auth/signup' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"name\": \"Johnson\",\n  \"lastName\": \"Doutestinvst\",\n  \"email\": \"testdouinv@test.com\",\n  \"password\": \"Qwertyt23456\",\n  \"repeatPassword\": \"Qwertyt23456\"\n}'"
					},
					"response": []
				},
				{
					"name": "signup check valid email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomFirstName}}\"));",
									"pm.collectionVariables.set(\"lastName\", pm.variables.replaceIn(\"{{$randomLastName}}\"));",
									"pm.collectionVariables.set(\"email\", pm.variables.replaceIn(\"{{$randomEmail}}\"));",
									"pm.collectionVariables.set(\"password\", pm.variables.replaceIn(\"{{$randomPassword}}\"));",
									"",
									"pm.test(\"Check email format\", function(){",
									"    var jsonData = pm.variables.get(\"email\");",
									"    var emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/; ",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\":{",
									"        \"status\": {\"type\":\"string\"},",
									"        \"message\":{\"type\":\"string\"}",
									"    },",
									"    \"required\": [\"status\",\"message\"]",
									"};",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test('JSON schema is valid', function () {",
									"    pm.expect(tv4.validate(response, schema)).to.be.true;",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{name}}\",\n  \"lastName\": \"{{lastName}}\",\n  \"email\": \"test701@gmail.com\",\n  \"password\": \"{{password}}\",\n  \"repeatPassword\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/signup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"signup"
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\n  'https://qauto2.forstudy.space/api/auth/signup' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"name\": \"Johnson\",\n  \"lastName\": \"Doutestinvst\",\n  \"email\": \"testdouinv@test.com\",\n  \"password\": \"Qwertyt23456\",\n  \"repeatPassword\": \"Qwertyt23456\"\n}'"
					},
					"response": []
				},
				{
					"name": "edit profile check data types",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"UserId is of integer data type\", function () {",
									"    pm.expect(pm.response.json().data.userId).to.be.a('number');",
									"});",
									"pm.test(\"Name is of string data type\", function () {",
									"    pm.expect(pm.response.json().data.name).to.be.a('string');",
									"});",
									"pm.test(\"Last name is of string data type\", function () {",
									"    pm.expect(pm.response.json().data.lastName).to.be.a('string');",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.test(\"Check dateBirth format\", function () {",
									"    var jsonData = pm.variables.get(\"dateBirth\")",
									"    var dateBirthPattern = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/;",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"photo\": \"user-1621352948859.jpg\",\n  \"name\": \"John\",\n  \"lastName\": \"Dou\",\n  \"dateBirth\": \"2021-03-17T15:21:05.000Z\",\n  \"country\": \"Ukraine\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"profile"
							]
						},
						"description": "Generated from cURL: curl -X 'PUT' \\\n  'https://qauto2.forstudy.space/api/users/profile' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"photo\": \"user-1621352948859.jpg\",\n  \"name\": \"John\",\n  \"lastName\": \"Dou\",\n  \"dateBirth\": \"2021-03-17T15:21:05.000Z\",\n  \"country\": \"Ukraine\"\n}'"
					},
					"response": []
				}
			]
		},
		{
			"name": "collection_runner",
			"item": [
				{
					"name": "signup negative checks",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomFirstName}}\"));",
									"pm.collectionVariables.set(\"lastName\", pm.variables.replaceIn(\"{{$randomLastName}}\"));",
									"pm.collectionVariables.set(\"email\", pm.variables.replaceIn(\"{{$randomEmail}}\"));",
									"pm.collectionVariables.set(\"password\", pm.variables.replaceIn(\"{{$randomPassword}}\"));",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check response message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.be.oneOf([\"\\\"email\\\" is not allowed to be empty\",\"Email is incorrect\"]);",
									"});",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Check responce status\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"error\");",
									"});",
									"",
									"",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\":{",
									"        \"status\": {\"type\":\"string\"},",
									"        \"message\":{\"type\":\"string\"}",
									"    },",
									"    \"required\": [\"status\",\"message\"]",
									"};",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test('JSON schema is valid', function () {",
									"    pm.expect(tv4.validate(response, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{name}}\",\n  \"lastName\": \"{{lastName}}\",\n  \"email\": \"{{test_email}}\",\n  \"password\": \"{{password}}\",\n  \"repeatPassword\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/signup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"signup"
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\n  'https://qauto2.forstudy.space/api/auth/signup' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"name\": \"Johnson\",\n  \"lastName\": \"Doutestinvst\",\n  \"email\": \"testdouinv@test.com\",\n  \"password\": \"Qwertyt23456\",\n  \"repeatPassword\": \"Qwertyt23456\"\n}'"
					},
					"response": []
				},
				{
					"name": "edit profile check data types Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"UserId is of integer data type\", function () {",
									"    pm.expect(pm.response.json().data.userId).to.be.a('number');",
									"});",
									"pm.test(\"Name is of string data type\", function () {",
									"    pm.expect(pm.response.json().data.name).to.be.a('string');",
									"});",
									"pm.test(\"Last name is of string data type\", function () {",
									"    pm.expect(pm.response.json().data.lastName).to.be.a('string');",
									"});",
									"",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"status\": { \"type\": \"string\" },",
									"        \"data\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"userId\": { \"type\": \"integer\" },",
									"                \"photoFilename\": { \"type\": \"string\" },",
									"                \"name\": { \"type\": \"string\" },",
									"                \"lastName\": { \"type\": \"string\" },",
									"                \"dateBirth\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"                \"country\": { \"type\": \"string\" }",
									"            },",
									"            \"required\": [\"userId\", \"photoFilename\", \"name\", \"lastName\", \"dateBirth\", \"country\"]",
									"        }",
									"    },",
									"    \"required\": [\"status\", \"data\"]",
									"};",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test('JSON schema is valid', function () {",
									"    pm.expect(tv4.validate(response, schema)).to.be.true;",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.test(\"Check dateBirth format\", function () {",
									"    var jsonData = pm.variables.get(\"dateBirth\")",
									"    var dateBirthPattern = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/;",
									"});",
									"",
									"pm.collectionVariables.set(\"email1\", pm.variables.replaceIn(\"{{$randomEmail}}\"));",
									"",
									"const baseUrl = pm.variables.get(\"base_url\");",
									"",
									"pm.sendRequest({",
									"    url: `${baseUrl}/auth/signup`,",
									"    method: \"POST\",",
									"    header: {",
									"        \"Content-Type\": \"application/json\"",
									"    },",
									"    body: {",
									"        mode: \"raw\",",
									"        raw: JSON.stringify({",
									"            \"name\": pm.variables.get(\"name\"),",
									"            \"lastName\": pm.variables.get(\"lastName\"),",
									"            \"email\": pm.variables.get(\"email1\"),",
									"            \"password\": pm.variables.get(\"password\"),",
									"            \"repeatPassword\": pm.variables.get(\"password\")",
									"        })",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"photo\": \"user-1621352948859.jpg\",\n  \"name\": \"John\",\n  \"lastName\": \"Dou\",\n  \"dateBirth\": \"2021-03-17T15:21:05.000Z\",\n  \"country\": \"Ukraine\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"profile"
							]
						},
						"description": "Generated from cURL: curl -X 'PUT' \\\n  'https://qauto2.forstudy.space/api/users/profile' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"photo\": \"user-1621352948859.jpg\",\n  \"name\": \"John\",\n  \"lastName\": \"Dou\",\n  \"dateBirth\": \"2021-03-17T15:21:05.000Z\",\n  \"country\": \"Ukraine\"\n}'"
					},
					"response": []
				}
			]
		},
		{
			"name": "signup",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomFirstName}}\"));",
							"pm.collectionVariables.set(\"lastName\", pm.variables.replaceIn(\"{{$randomLastName}}\"));",
							"pm.collectionVariables.set(\"email\", pm.variables.replaceIn(\"{{$randomEmail}}\"));",
							"pm.collectionVariables.set(\"password\", pm.variables.replaceIn(\"{{$randomPassword}}\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"userID\", jsonData.data.userId);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"status\": {\"type\": \"string\"},",
							"        \"data\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"userId\": {\"type\": \"integer\"},",
							"                \"photoFilename\": {\"type\": \"string\"},",
							"                \"distanceUnits\": {\"type\": \"string\"},",
							"                \"currency\": {\"type\": \"string\"}",
							"            },",
							"            \"required\": [\"userId\", \"photoFilename\", \"distanceUnits\", \"currency\"]",
							"        }",
							"    },",
							"    \"required\": [\"status\", \"data\"]",
							"};",
							"",
							"var response = pm.response.json();",
							"",
							"pm.test('JSON schema is valid', function () {",
							"    pm.expect(tv4.validate(response, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"{{name}}\",\n  \"lastName\": \"{{lastName}}\",\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\",\n  \"repeatPassword\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth/signup",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"signup"
					]
				},
				"description": "Generated from cURL: curl -X 'POST' \\\n  'https://qauto2.forstudy.space/api/auth/signup' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"name\": \"Johnson\",\n  \"lastName\": \"Doutestinvst\",\n  \"email\": \"testdouinv@test.com\",\n  \"password\": \"Qwertyt23456\",\n  \"repeatPassword\": \"Qwertyt23456\"\n}'"
			},
			"response": []
		},
		{
			"name": "signin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check userId\", function () {",
							"    var jsonData = pm.response.json();",
							"    const userID = pm.collectionVariables.get(\"userID\");",
							"    pm.expect(jsonData.data.userId).to.eql(userID);",
							"});",
							"",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\",\n  \"remember\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth/signin",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"signin"
					]
				},
				"description": "Generated from cURL: curl -X 'POST' \\\n  'https://qauto2.forstudy.space/api/auth/signin' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"email\": \"test@test.com\",\n  \"password\": \"Qwerty12345\",\n  \"remember\": false\n}'"
			},
			"response": []
		},
		{
			"name": "edit profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Сheck name field value\", function () {",
							"    pm.expect(jsonData.data.name).to.eql(\"John\")",
							"});",
							"",
							"pm.test(\"Сheck lastName field value\", function () {",
							"    pm.expect(jsonData.data.lastName).to.eql(\"Dou\")",
							"});",
							"",
							"pm.test(\"Сheck dateBirth field value\", function () {",
							"    pm.expect(jsonData.data.dateBirth).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/)",
							"});",
							"",
							"pm.test(\"Сheck country field value\", function () {",
							"    pm.expect(jsonData.data.country).to.eql(\"Ukraine\")",
							"});",
							"",
							"pm.test(\"Сheck photoFilename field value\", function () {",
							"    pm.expect(jsonData.data.photoFilename).to.eql(\"default-user.png\")",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"",
							"pm.test(\"Check dateBirth format\", function () {",
							"    var jsonData = pm.variables.get(\"dateBirth\")",
							"    var dateBirthPattern = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/;",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"photo\": \"user-1621352948859.jpg\",\n  \"name\": \"John\",\n  \"lastName\": \"Dou\",\n  \"dateBirth\": \"2021-03-17T15:21:05.000Z\",\n  \"country\": \"Ukraine\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/users/profile",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"profile"
					]
				},
				"description": "Generated from cURL: curl -X 'PUT' \\\n  'https://qauto2.forstudy.space/api/users/profile' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"photo\": \"user-1621352948859.jpg\",\n  \"name\": \"John\",\n  \"lastName\": \"Dou\",\n  \"dateBirth\": \"2021-03-17T15:21:05.000Z\",\n  \"country\": \"Ukraine\"\n}'"
			},
			"response": []
		},
		{
			"name": "edit password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"password\", JSON.parse(pm.request.body.raw).password);",
							"",
							"pm.test(\"Check userId\", function () {",
							"    var jsonData = pm.response.json();",
							"    const userID = pm.collectionVariables.get(\"userID\");",
							"    pm.expect(jsonData.data.userId).to.eql(userID);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"oldPassword\": \"{{password}}\",\n  \"password\": \"LuiTest1234\",\n  \"repeatPassword\": \"LuiTest1234\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/users/password",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"password"
					]
				},
				"description": "Generated from cURL: curl -X 'PUT' \\\n  'https://qauto2.forstudy.space/api/users/password' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"oldPassword\": \"FooBar12345\",\n  \"password\": \"Qwerty12345\",\n  \"repeatPassword\": \"Qwerty12345\"\n}'"
			},
			"response": []
		},
		{
			"name": "logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Chech status\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/auth/logout",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"logout"
					]
				},
				"description": "Generated from cURL: curl -X 'GET' \\\n  'https://qauto2.forstudy.space/api/auth/logout' \\\n  -H 'accept: application/json'"
			},
			"response": []
		},
		{
			"name": "login with new password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check userId\", function () {",
							"    var jsonData = pm.response.json();",
							"    const userID = pm.collectionVariables.get(\"userID\");",
							"    pm.expect(jsonData.data.userId).to.eql(userID);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check status\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\",\n  \"remember\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://qauto2.forstudy.space/api/auth/signin",
					"protocol": "https",
					"host": [
						"qauto2",
						"forstudy",
						"space"
					],
					"path": [
						"api",
						"auth",
						"signin"
					]
				},
				"description": "Generated from cURL: curl -X 'POST' \\\n  'https://qauto2.forstudy.space/api/auth/signin' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"email\": \"test@test.com\",\n  \"password\": \"Qwerty12345\",\n  \"remember\": false\n}'"
			},
			"response": []
		},
		{
			"name": "add a car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responceBody = pm.response.json();",
							"pm.collectionVariables.set(\"carId\", responceBody.data.id)",
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"carBrandId\": 1,\n  \"carModelId\": 1,\n  \"mileage\": 122\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/cars",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"cars"
					]
				},
				"description": "Generated from cURL: curl -X 'POST' \\\n  'https://qauto2.forstudy.space/api/cars' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"carBrandId\": 1,\n  \"carModelId\": 1,\n  \"mileage\": 122\n}'"
			},
			"response": []
		},
		{
			"name": "add car expenses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							"",
							"pm.test(\"Status code name has string OK\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"Check status\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let previousMileage = pm.collectionVariables.get(\"previousMileage\");",
							"",
							"if (!previousMileage) {",
							"    previousMileage = 122;",
							"} else {",
							"    previousMileage = parseInt(previousMileage) + 1;",
							"}",
							"",
							"pm.collectionVariables.set(\"previousMileage\", previousMileage);",
							"",
							"let requestBody = {",
							"    \"carId\": pm.variables.get(\"carId\"),",
							"    \"reportedAt\": \"2025-02-09\",",
							"    \"mileage\": previousMileage,",
							"    \"liters\": 11,",
							"    \"totalCost\": 11,",
							"    \"forceMileage\": false",
							"};",
							"",
							"pm.request.body.raw = JSON.stringify(requestBody);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"carId\": {{carId}},\n  \"reportedAt\": \"2025-02-09\",\n  \"mileage\": {{previousMileage}},\n  \"liters\": 11,\n  \"totalCost\": 11,\n  \"forceMileage\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/expenses",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"expenses"
					]
				},
				"description": "Generated from cURL: curl -X 'POST' \\\n  'https://qauto2.forstudy.space/api/expenses' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"carId\": 1,\n  \"reportedAt\": \"2021-05-17\",\n  \"mileage\": 111,\n  \"liters\": 11,\n  \"totalCost\": 11,\n  \"forceMileage\": false\n}'"
			},
			"response": []
		},
		{
			"name": "delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Chech status\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/users",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users"
					]
				},
				"description": "Generated from cURL: curl -X 'DELETE' \\\n  'https://qauto2.forstudy.space/api/users' \\\n  -H 'accept: application/json'"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "lastName",
			"value": ""
		},
		{
			"key": "carId",
			"value": ""
		},
		{
			"key": "userID",
			"value": ""
		},
		{
			"key": "previousMileage",
			"value": ""
		},
		{
			"key": "email1",
			"value": ""
		}
	]
}